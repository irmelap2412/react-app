{"ast":null,"code":"var _jsxFileName = \"C:\\\\hackaton\\\\react-app\\\\frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ChatList from \"./ChatList\";\nimport ChatDetail from \"./ChatDetail\";\nimport \"./Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [chats, setChats] = useState([{\n    id: 1,\n    name: \"John Doe\",\n    avatar: \"/placeholder.svg?height=50&width=50\",\n    lastMessage: \"Hey, how are you?\",\n    messages: [{\n      sender: \"other\",\n      text: \"Hey, how are you?\"\n    }, {\n      sender: \"user\",\n      text: \"I'm good, thanks! How about you?\"\n    }]\n  }, {\n    id: 2,\n    name: \"Jane Smith\",\n    avatar: \"/placeholder.svg?height=50&width=50\",\n    lastMessage: \"See you tomorrow!\",\n    messages: [{\n      sender: \"user\",\n      text: \"Are we still on for tomorrow?\"\n    }, {\n      sender: \"other\",\n      text: \"Yes, see you tomorrow!\"\n    }]\n  }]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const handleSelectChat = chatId => {\n    setSelectedChat(chats.find(chat => chat.id === chatId));\n  };\n  const handleSendMessage = message => {\n    if (selectedChat) {\n      const updatedChats = chats.map(chat => {\n        if (chat.id === selectedChat.id) {\n          return {\n            ...chat,\n            messages: [...chat.messages, {\n              sender: \"user\",\n              text: message\n            }],\n            lastMessage: message\n          };\n        }\n        return chat;\n      });\n      setChats(updatedChats);\n      setSelectedChat({\n        ...selectedChat,\n        messages: [...selectedChat.messages, {\n          sender: \"user\",\n          text: message\n        }],\n        lastMessage: message\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(ChatList, {\n      chats: chats,\n      onSelectChat: handleSelectChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), selectedChat && /*#__PURE__*/_jsxDEV(ChatDetail, {\n      chat: selectedChat,\n      onSendMessage: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"DQWOQk4kjmMd11cfKNIAACfJZmA=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","ChatList","ChatDetail","jsxDEV","_jsxDEV","Chat","_s","chats","setChats","id","name","avatar","lastMessage","messages","sender","text","selectedChat","setSelectedChat","handleSelectChat","chatId","find","chat","handleSendMessage","message","updatedChats","map","className","children","onSelectChat","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","_c","$RefreshReg$"],"sources":["C:/hackaton/react-app/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ChatList from \"./ChatList\";\r\nimport ChatDetail from \"./ChatDetail\";\r\nimport \"./Chat.css\";\r\n\r\nconst Chat = () => {\r\n  const [chats, setChats] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"John Doe\",\r\n      avatar: \"/placeholder.svg?height=50&width=50\",\r\n      lastMessage: \"Hey, how are you?\",\r\n      messages: [\r\n        { sender: \"other\", text: \"Hey, how are you?\" },\r\n        { sender: \"user\", text: \"I'm good, thanks! How about you?\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Jane Smith\",\r\n      avatar: \"/placeholder.svg?height=50&width=50\",\r\n      lastMessage: \"See you tomorrow!\",\r\n      messages: [\r\n        { sender: \"user\", text: \"Are we still on for tomorrow?\" },\r\n        { sender: \"other\", text: \"Yes, see you tomorrow!\" },\r\n      ],\r\n    },\r\n  ]);\r\n\r\n  const [selectedChat, setSelectedChat] = useState(null);\r\n\r\n  const handleSelectChat = (chatId) => {\r\n    setSelectedChat(chats.find((chat) => chat.id === chatId));\r\n  };\r\n\r\n  const handleSendMessage = (message) => {\r\n    if (selectedChat) {\r\n      const updatedChats = chats.map((chat) => {\r\n        if (chat.id === selectedChat.id) {\r\n          return {\r\n            ...chat,\r\n            messages: [...chat.messages, { sender: \"user\", text: message }],\r\n            lastMessage: message,\r\n          };\r\n        }\r\n        return chat;\r\n      });\r\n      setChats(updatedChats);\r\n      setSelectedChat({\r\n        ...selectedChat,\r\n        messages: [...selectedChat.messages, { sender: \"user\", text: message }],\r\n        lastMessage: message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <ChatList chats={chats} onSelectChat={handleSelectChat} />\r\n      {selectedChat && (\r\n        <ChatDetail chat={selectedChat} onSendMessage={handleSendMessage} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CACjC;IACES,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAE,qCAAqC;IAC7CC,WAAW,EAAE,mBAAmB;IAChCC,QAAQ,EAAE,CACR;MAAEC,MAAM,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAoB,CAAC,EAC9C;MAAED,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAmC,CAAC;EAEhE,CAAC,EACD;IACEN,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,YAAY;IAClBC,MAAM,EAAE,qCAAqC;IAC7CC,WAAW,EAAE,mBAAmB;IAChCC,QAAQ,EAAE,CACR;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAgC,CAAC,EACzD;MAAED,MAAM,EAAE,OAAO;MAAEC,IAAI,EAAE;IAAyB,CAAC;EAEvD,CAAC,CACF,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMkB,gBAAgB,GAAIC,MAAM,IAAK;IACnCF,eAAe,CAACV,KAAK,CAACa,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACZ,EAAE,KAAKU,MAAM,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMG,iBAAiB,GAAIC,OAAO,IAAK;IACrC,IAAIP,YAAY,EAAE;MAChB,MAAMQ,YAAY,GAAGjB,KAAK,CAACkB,GAAG,CAAEJ,IAAI,IAAK;QACvC,IAAIA,IAAI,CAACZ,EAAE,KAAKO,YAAY,CAACP,EAAE,EAAE;UAC/B,OAAO;YACL,GAAGY,IAAI;YACPR,QAAQ,EAAE,CAAC,GAAGQ,IAAI,CAACR,QAAQ,EAAE;cAAEC,MAAM,EAAE,MAAM;cAAEC,IAAI,EAAEQ;YAAQ,CAAC,CAAC;YAC/DX,WAAW,EAAEW;UACf,CAAC;QACH;QACA,OAAOF,IAAI;MACb,CAAC,CAAC;MACFb,QAAQ,CAACgB,YAAY,CAAC;MACtBP,eAAe,CAAC;QACd,GAAGD,YAAY;QACfH,QAAQ,EAAE,CAAC,GAAGG,YAAY,CAACH,QAAQ,EAAE;UAAEC,MAAM,EAAE,MAAM;UAAEC,IAAI,EAAEQ;QAAQ,CAAC,CAAC;QACvEX,WAAW,EAAEW;MACf,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKsB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BvB,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEA,KAAM;MAACqB,YAAY,EAAEV;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACzDhB,YAAY,iBACXZ,OAAA,CAACF,UAAU;MAACmB,IAAI,EAAEL,YAAa;MAACiB,aAAa,EAAEX;IAAkB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA3DID,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AA6DV,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}